---
import Container from "./Container.astro";
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:aleckzf@gmail.com",
  },
];
---

<header class="sticky top-2 z-10">
  <Container class="nav-container">
    <nav
      class="sticky-menu max-w-max mx-auto px-2 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200"
    >
      <ul class="flex gap-x-2 items-center justify-center">
        {
          navItems.map((link) => (
            <li>
              <a
                class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
                aria-label={link.label}
                href={link.url}
              >
                {link.title}
              </a>
            </li>
          ))
        }
        <ThemeToggle />
      </ul>
    </nav>
  </Container>
</header>

<script>
  const sections = document.querySelectorAll("section");
  const navItems = document.querySelectorAll("header nav a");

  const callback = (entries: any[]) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        navItems.forEach((item) => {
          if (item.getAttribute("aria-label") == entry.target.id) {
            item.classList.add("text-blue-500");
          } else {
            item.classList.remove("text-blue-500");
          }
        });
      }
    });
  };

  const observer = new IntersectionObserver(callback, {
    root: null,
    rootMargin: "0px",
    threshold: 0.3,
  });

  sections.forEach((section) => {
    observer.observe(section);
  });

  // Cleanup function
  document.onvisibilitychange = () => {
    if (document.visibilityState === "hidden") {
      observer.disconnect();
    } else {
      sections.forEach((section) => {
        observer.observe(section);
      });
    }
  };
</script>

<style>
  @reference "../styles/global.css";

  nav {
    animation: nav-shadow 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply dark:bg-gray-800/90 bg-white/50;
  }
  @property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  @keyframes nav-shadow {
    0% {
      background-color: color-mix(
        in oklab,
        var(--color-white) /* #fff = #ffffff */ 0%,
        transparent
      );
      &:where(.dark, .dark *) {
        background-color: color-mix(
          in oklab,
          var(--color-gray-800) /* oklch(27.8% 0.033 256.848) = #1e2939 */ 0%,
          transparent
        );
      }
    }
    to {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
        calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-backdrop-blur: blur(8px);
      -webkit-backdrop-filter: var(--tw-backdrop-blur,)
        var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
        var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
        var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
        var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
        var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-white) /* #fff = #ffffff */ 10%,
        transparent
      );
    }
  }
</style>
